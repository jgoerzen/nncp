Новости
*******

Релиз 4.1
=========

   • Восстановлена работоспособность на GNU/Linux системах и Go версии
     1.10.

Релиз 4.0
=========

   • *Несовместимое* изменение формата зашифрованных и eblob пакетов:
     используется AEAD режим шифрования с 128 КиБ блоками, так как
     раньше ‘nncp-toss’ не проверял MAC зашифрованного пакета прежде чем
     отсылать дешифрованные данные внешней команде.  Старые версии не
     поддерживаются.
   • Проверка доступного места перед копированием во время работы
     ‘nncp-xfer’, ‘nncp-daemon’, ‘nncp-call(er)’.
   • ‘nncp-call’ имеет возможность только показывать список пакетов на
     удалённой машине, без их передачи.
   • ‘nncp-call’ имеет возможность передавать только чётко указанные
     пакеты.
   • Восстановлена работоспособность ‘xxrate’ настройки в ‘calls’ секции
     конфигурационного файла.
   • Зависимые библиотеки обновлены.
   • Небольшие исправления ошибок.
   • Начало использования ‘go.mod’ подсистемы.

Релиз 3.4
=========

   • ‘nncp-daemon’ может быть запущен как ‘inetd’-служба.

Релиз 3.3
=========

   • ‘nncp-daemon’, ‘nncp-call’, ‘nncp-caller’ проверяют существование
     ‘.seen’ файла и расценивают его как то, что файл уже был скачан.
     Возможно передача данных была осуществлена сторонним способом и
     удалённая сторона должна быть оповещена об этом.
   • Если более высокоприоритетный пакет попадает в спул, то
     ‘nncp-daemon’ добавит его в очередь отправки первым, прерывая
     низкоприоритетные передачи.
   • К средствам связанным с online-соединениями (‘nncp-daemon’,
     ‘nncp-call’, ‘nncp-caller’) добавлен простой ограничитель скорости.
   • Возможность задания приоритета символьными обозначениями: NORMAL,
     BULK+10, PRIORITY-5, итд.
   • Изменены значения приоритетов по-умолчанию: для ‘nncp-exec’ с 64 на
     96, для ‘nncp-freq’ с 64 на 160, для ‘nncp-file’ с 196 на 224.

Релиз 3.2
=========

   • *Несовместимое* изменение формата _bundle_ архивов и
     работоспособность ‘nncp-bundle’ команды с Go 1.10+.  Bundle должен
     быть корректным tar архивом, но Go 1.9 делал его недействительным
     из-за длинных путей внутри.  NNCP нечаянно был зависим от этой
     баги.  Явное добавление ‘NNCP/’ директории в архив восстанавливает
     работоспособность с корректными tar архивами.

Релиз 3.1
=========

   • Возможность отключать пересылку через промежуточные ноды используя
     -via - опцию командной строки.

Релиз 3.0
=========

   • *Несовместимое* изменение формата простых пакетов.  Работа со
     старыми версиями не поддерживается.
   • Добавлена возможность удалённого исполнения команд, путём
     конфигурирования ‘exec’ опции конфигурационного файла и
     использования команды ‘nncp-exec’:
        • Команда ‘nncp-mail’ заменена более гибкой и широкой
          ‘nncp-exec’.  Вместо вызова nncp-mail NODE RECIPIENT нужно
          использовать nncp-exec NODE sendmail RECIPIENT.
        • ‘sendmail’ опция конфигурационного файла заменена на более
          гибкую ‘exec’.  sendmail: [...] нужно заменить на exec:
              sendmail: [...].
   • Возможность переопределить ‘via’ опцию конфигурации для целевого
     узла через ‘-via’ опцию командной строки для следующих команд:
     ‘nncp-file’, ‘nncp-freq’, ‘nncp-exec’.
   • Chunked файлы, меньшего размера чем указанный chunk, отправляются
     просто в виде одного файла.
   • Exec команды вызываются с дополнительными переменными окружения
     ‘NNCP_NICE’ и ‘NNCP_SELF’.
   • Отправляемые файлы в ответ на запрос имеют приоритет указанный в
     запросе.  Указать их желаемый приоритет во время вызова ‘nncp-freq’
     можно аргументом ‘-replynice’.
   • Команде ‘nncp-toss’ можно сказать не обрабатывать определённые типы
     пакетов, за счёт опций ‘-nofile’, ‘-nofreq’, ‘-noexec’, ‘-notrns’.
   • По-умолчанию ‘nncp-file’ команда для ‘-minsize’/‘-chunked’ опций
     использует ‘FreqMinSize’/‘FreqChunked’ из конфигурационного файла.
     Это можно отключить указав нулевое значение.

Релиз 2.0
=========

   • *Несовместимое* изменение формата зашифрованных и eblob пакетов.
     Работа со старыми версиями не поддерживается.
   • Алгоритм шифрования Twofish заменён на ChaCha20.  Он намного
     быстрее.  Одним криптографическим примитивом меньше.
   • HKDF-BLAKE2b-256 KDF алгоритм заменён на BLAKE2Xb XOF. Ещё одним
     криптографическим примитивом меньше (предполагая, что BLAKE2X
     практически идентичен BLAKE2).

Релиз 1.0
=========

   • *Несовместимое* изменение формата зашифрованных пакетов.  Работа со
     старыми версиями не поддерживается.
   • ‘nncp-bundle’ команда может создавать потоки зашифрованных пакетов
     или потреблять их.  Это полезно когда речь идёт о stdin/stdout
     методах передачи (например запись на CD-ROM без создания
     промежуточного подготовленного ISO образа или работа с ленточными
     накопителями).
   • ‘nncp-toss’ команда может создавать ‘.seen’ файлы, предотвращая
     приём дублированных пакетов.
   • В команде ‘nncp-call’ разрешается иметь только одного обработчика
     контрольной суммы в фоне.  Это полезно когда тысячи маленьких
     входящих пакетов могут создать много горутин.
   • Возможность переопределить путь до spool директории и файла журнала
     через аргумент командной строки или переменную окружения.
   • ‘nncp-rm’ команда может удалять все исходящие/входящие, ‘.seen’,
     ‘.part’, ‘.lock’ и временные файлы.

Релиз 0.12
==========

   • Команда sendmail вызывается с ‘NNCP_SENDER’ переменной окружения.

Релиз 0.11
==========

   • Вывод команды ‘nncp-stat’ отсортирован по имени ноды.

Релиз 0.10
==========

   • ‘DST’ аргумент ‘nncp-freq’ команды теперь опционален.  По-умолчанию
     будет подставлен последний элемент ‘SRC’ пути.

Релиз 0.9
=========

   • Исправлена обработка ‘-rx’/‘-tx’ опций ‘nncp-call’ команды.  Они
     игнорировались.

Релиз 0.8
=========

   • Небольшое исправление ошибки в команде ‘nncp-file’, где опция
     ‘-minsize’ для передачи без разбиения на части была в байтах, а не
     KiB-ах.

Релиз 0.7
=========

   • Возможность предоставлять данные для ‘nncp-file’ через стандартный
     ввод, используя временный зашифрованный файл для этого.

   • Появилась возможность передачи файлов разбитых на части, с
     сопутствующей ‘nncp-reass’ командой и ‘freqchunked’ опцией
     конфигурационного файла.  Полезно для передачи больших файлов через
     маленькие устройства хранения.

   • ‘freqminsize’ опция конфигурационного файла, аналогичная
     ‘-minsize’.

   • Опция ‘-force’ команды ‘nncp-xfer’ переименована в ‘-mkdir’ для
     ясности.

   • Опция ‘-minsize’ задаётся в KiB, а не байтах, для удобства.

   • Команда ‘nncp-newcfg’ переименована в ‘nncp-cfgnew’, а
     ‘nncp-mincfg’ в ‘nncp-cfgmin’, для того чтобы они имели общий
     префикс и были сгруппированы для удобства.

   • Появилась команда ‘nncp-cfgenc’, позволяющая шифровать/дешифровать
     конфигурационный файл, чтобы безопасно его хранить без
     использования OpenPGP или других подобных инструментов.

   • Обновлены зависимые криптографические библиотеки.

Релиз 0.6
=========

   • Появилась небольшая команда ‘nncp-rm’.
   • Обновлены зависимые криптографические библиотеки.

Релиз 0.5
=========

   • Тривиальное небольшое исправление в значениях приоритетов
     по-умолчанию в ‘nncp-file’ и ‘nncp-freq’ командах.

Релиз 0.4
=========

   • Небольшое исправление в ‘nncp-call’, ‘nncp-caller’, ‘nncp-daemon’:
     иногда они могли падать с segmentation fault ошибкой (данные не
     терялись).
   • ‘nncp-newnode’ переименована в ‘nncp-newcfg’ – это короче и удобнее
     для использования.
   • Появилась команда ‘nncp-mincfg’: вспомогательная утилита
     позволяющая создать минималистичный урезанный конфигурационный файл
     без приватных ключей, что полезно во время использования
     ‘nncp-xfer’.

Релиз 0.3
=========

Исправлена совместимость с Go 1.6.

Релиз 0.2
=========

   • *Несовместимое* изменение формата пакета (магическое число тоже
     изменено): поле размера пакета шифруется и не посылается в открытом
     виде.
   • ‘-minsize’ опция даёт возможность автоматически дополнять исходящие
     пакеты до указанного минимального размера.
   • ‘nncp-daemon’ и ‘nncp-call’/‘nncp-caller’ всегда в фоне проверяют
     появление исходящих _tx_ пакетов пока подключены.  Удалённая
     сторона сразу же оповещается об этом.
   • ‘-onlinedeadline’ опция даёт возможность выставления timeout-а на
     неактивность в online соединении, когда оно должно быть отключено.
     Она может быть использована для сохранения соединения на долгое
     время.
   • ‘-maxonlinetime’ опция даёт возможность указания максимального
     возможного времени жизни соединения.
   • Появилась ‘nncp-caller’ команда: клиент TCP-демона работающий по
     cron-у.
   • ‘nncp-pkt’ команда может разжимать данные.

